{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3305a664_7912a609",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapConfiguration.aidl",
        "patchSetId": 14
      },
      "lineNbr": 32,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-15T01:28:00Z",
      "side": 1,
      "message": "what values is this expected to take?",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 33
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d407d2d2_05642de5",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapConfiguration.aidl",
        "patchSetId": 14
      },
      "lineNbr": 32,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-17T08:36:20Z",
      "side": 1,
      "message": "In the end, it will be a human readable tag to aggregate values of parameter in given conditions.\nFor example, it could be \"MusicWhileInCall\". An id could be enough, but for debugging purpose, it may be easier to get the meaning of the configuration.",
      "parentUuid": "3305a664_7912a609",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 33
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1da1d8dd_b481bdc8",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapConfiguration.aidl",
        "patchSetId": 14
      },
      "lineNbr": 32,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2024-06-17T18:48:03Z",
      "side": 1,
      "message": "Please clarify this as the comment for the parcelable says \"The configuration is referred by its name and associated rule\" which implies that there are some requirements for these names to be unique, at least in my understanding.",
      "parentUuid": "d407d2d2_05642de5",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 33
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a0ee544_81024cac",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapConfiguration.aidl",
        "patchSetId": 14
      },
      "lineNbr": 32,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2024-06-20T23:03:09Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "1da1d8dd_b481bdc8",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 33
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "803d67ea_c365b24d",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapConfiguration.aidl",
        "patchSetId": 14
      },
      "lineNbr": 32,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-24T14:10:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1da1d8dd_b481bdc8",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 33
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8200db8b_716d7068",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapCriterionType.aidl",
        "patchSetId": 14
      },
      "lineNbr": 47,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-15T01:28:00Z",
      "side": 1,
      "message": "which code is expected to read and understand these? the client and the server and who writes it?\n\nWhat\u0027s an example value?",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "924d4536_38a471be",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapCriterionType.aidl",
        "patchSetId": 14
      },
      "lineNbr": 47,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-17T07:33:43Z",
      "side": 1,
      "message": "The client (writer) will be audio policy engine configurable.\nThe consumer (reader) is the parameter framework. (it is not a server).",
      "parentUuid": "8200db8b_716d7068",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73a4030a_44120e2a",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapCriterionType.aidl",
        "patchSetId": 14
      },
      "lineNbr": 47,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-18T00:54:36Z",
      "side": 1,
      "message": "but if they aren\u0027t defined, how can they be interpreted? where would it get the values?\n\nThis doesn\u0027t seem to standardize things as much as it seems to allow anything to go in here. This makes it hard to write generic code against the interface.",
      "parentUuid": "924d4536_38a471be",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0ddba3c_0bf92fc2",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapCriterionType.aidl",
        "patchSetId": 14
      },
      "lineNbr": 47,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-18T13:31:13Z",
      "side": 1,
      "message": "I updated the comment to describe for each type, the expected values",
      "parentUuid": "73a4030a_44120e2a",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5112c4d_32c5c7e4",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapCriterionType.aidl",
        "patchSetId": 14
      },
      "lineNbr": 47,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2024-07-26T12:56:34Z",
      "side": 1,
      "message": "These are used for binding of AudioHalCapRule.CriterionRule.criterionTypeValue.",
      "parentUuid": "d0ddba3c_0bf92fc2",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8a6a03aa_4d6cd5ca",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapCriterionType.aidl",
        "patchSetId": 14
      },
      "lineNbr": 47,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-08-22T15:36:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5112c4d_32c5c7e4",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 47,
        "endChar": 31
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa92e723_594f10ae",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapCriterionType.aidl",
        "patchSetId": 14
      },
      "lineNbr": 53,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2024-06-14T20:36:19Z",
      "side": 1,
      "message": "Since the use of numerical values is a performance optimization, can we instead use human-readable values only, and translate them to integer values on the framework side?",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97da0069_cbe59daf",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapCriterionType.aidl",
        "patchSetId": 14
      },
      "lineNbr": 53,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-15T01:28:00Z",
      "side": 1,
      "message": "also, how many could there be?\n\nWould this ever be {1, 2, 3, ... 100}?",
      "parentUuid": "fa92e723_594f10ae",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4be991ba_5eaaf4a7",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapCriterionType.aidl",
        "patchSetId": 14
      },
      "lineNbr": 53,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-17T07:33:43Z",
      "side": 1,
      "message": "For exclusive criterion, the value is linked to an enum value (Android mode, setForceUse, ...).\nFor exclusive criterion, the value is on 64 bits, as one limiter was the output devices representation as a bitfield (on bit per device in parameter framework). As the device list grows up, the quick solution was to migrate literal value on 64 bits.\n\nRegarding Mikhail request: answer is yes and no: for the device with mapped value: it would be possible, for the other without mapped value, the numerical must be provisionned.",
      "parentUuid": "97da0069_cbe59daf",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b71b51a5_d0e7a578",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapCriterionType.aidl",
        "patchSetId": 14
      },
      "lineNbr": 53,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2024-06-26T21:45:26Z",
      "side": 1,
      "message": "\u003e the value is linked to an enum value (Android mode, setForceUse, ...)\n\nThis sounds a lot like the parameters that we already have in AIDL. Can we have a `union` here referencing the corresponding AIDL type?\n\nIn my understanding, these AIDL-specifications should not reference enum values from C APIs 😊",
      "parentUuid": "4be991ba_5eaaf4a7",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9e47cbc_37f870d4",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapCriterionType.aidl",
        "patchSetId": 14
      },
      "lineNbr": 53,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-27T15:11:44Z",
      "side": 1,
      "message": "Definitely, I also saw the aidl\u0027isation of setForceUse but it is in libaudioclient and it is not frozen.\nAlso, string contract was already there, and changing to union if not compiling as breaking compat (it is a overkill to speak about compat since it has for sure never been used as aidl contract before!)\n\nIf I could force the compat break, i guess union would suit perfectly my needs.",
      "parentUuid": "b71b51a5_d0e7a578",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5948d80_08a38fa7",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapCriterionType.aidl",
        "patchSetId": 14
      },
      "lineNbr": 53,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2024-06-28T18:03:30Z",
      "side": 1,
      "message": "\u003e I also saw the aidl\u0027isation of setForceUse but it is in libaudioclient and it is not frozen.\n\nThat\u0027s because until now there was no need to pass it from/to the HAL. Any data types that are used for this purpose should be moved to `android.media.audio.common.types`. On the framework side, these types can be converted to legacy ints if needed.",
      "parentUuid": "b9e47cbc_37f870d4",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24a8d273_969aa413",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapCriterionType.aidl",
        "patchSetId": 14
      },
      "lineNbr": 53,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-08-22T15:36:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a5948d80_08a38fa7",
      "range": {
        "startLine": 48,
        "startChar": 0,
        "endLine": 53,
        "endChar": 36
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67a1e24a_e93351e7",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 35,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-15T01:28:00Z",
      "side": 1,
      "message": "nit: avoid a structure like \u0027rules\u0027. You can create a top-level union \u0027Rule\u0027 and then if people use \u0027Rule\u0027 they have one Rule and \u0027Rule[]\u0027 or \u0027@nullable Rule[]\u0027 they have many. It\u0027s more expressive.",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3ed8a90_bcdc2d6c",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 35,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-17T08:36:20Z",
      "side": 1,
      "message": "the thing is that rule may be made of nested rules. Would need recursive aidl. I dont think it is supported.\nSo if i use union, the rule array will be an array of operand rather than an array of rule.\nSo may the name of this parcelable be misleading. I am tempted to rename as singular.",
      "parentUuid": "67a1e24a_e93351e7",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57d0ece7_aa50ee5f",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 35,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-18T00:54:36Z",
      "side": 1,
      "message": "It is supported. You can use `@nullable(heap\u003dtrue)`:\nhttps://cs.android.com/android/platform/superproject/main/+/main:system/tools/aidl/tests/android/aidl/tests/RecursiveList.aidl;l\u003d21?q\u003dsystem%2Ftools%2Faidl%2Ftests%2Fandroid%2Faidl%2Ftests%2FRecursiveList.aidl\n\nThis can encode a tree (but not a graph), but I think that\u0027s a good thing (and trees are isomorphic to graphs if you redefine the node values ...).",
      "parentUuid": "c3ed8a90_bcdc2d6c",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27c69687_7c1cbd05",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 35,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-18T07:54:55Z",
      "side": 1,
      "message": "Many thanks for this tip, I will try it",
      "parentUuid": "57d0ece7_aa50ee5f",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01bf1033_ada5d3c7",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 35,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-18T13:31:13Z",
      "side": 1,
      "message": "So far, I am facing issue with deleted copy contructor when using the AudioHalCapRules with recursivity. Even if I used std::move, issue is coming from generated backend code.",
      "parentUuid": "27c69687_7c1cbd05",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38beff04_376daaf4",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 35,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-18T15:02:32Z",
      "side": 1,
      "message": "I did not use this as it generated a unique_ptr, seems that it has impact on aidl using this type (copy constructor...). \nI saw that a lot of unique_ptr were migrated to optional_ptr for code generation between A11 / A12, seems a better choice.\n\nI used it, and it worked, i could even remove the ugly delimiters!",
      "parentUuid": "27c69687_7c1cbd05",
      "range": {
        "startLine": 35,
        "startChar": 11,
        "endLine": 35,
        "endChar": 27
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80e05a00_bb30d72f",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 38,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-15T01:28:00Z",
      "side": 1,
      "message": "prefer comments before, for AIDL to be able to understand what it\u0027s a comment on",
      "range": {
        "startLine": 38,
        "startChar": 17,
        "endLine": 38,
        "endChar": 33
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5935544_bac05e78",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 38,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-17T08:36:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "80e05a00_bb30d72f",
      "range": {
        "startLine": 38,
        "startChar": 17,
        "endLine": 38,
        "endChar": 33
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0884d808_d536aadd",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 61,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-15T01:28:00Z",
      "side": 1,
      "message": "readers/writers of these as well, what are expected values?",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 61,
        "endChar": 45
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed41a6cd_9dd5b6d4",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 61,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-17T08:36:20Z",
      "side": 1,
      "message": "Writer is the audio policy engine configurable.\nReader is the parameter framework that is ensuring the provided name / value are matching the rule defined with name/value in each domain rule.",
      "parentUuid": "0884d808_d536aadd",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 61,
        "endChar": 45
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c25fab17_8f011883",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 61,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2024-06-26T21:45:26Z",
      "side": 1,
      "message": "I think, this is now documented:\n\n```\n        /*\n         * Must be one of the name defined by {@see AudioHalCapCriterion}.\n         */\n        @utf8InCpp String criterionName;\n        /*\n         * Must be one of the value defined by {@see AudioHalCapCriterionType} associated to the\n         * {@see AudioHalCapCriterion.criterionTypeName}.\n         */\n        @utf8InCpp String criterionTypeValue;\n```\n\nsmoreland@ Steven, are you OK with this approach?",
      "parentUuid": "ed41a6cd_9dd5b6d4",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 61,
        "endChar": 45
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "aa3f204e_41455bfd",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 61,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-08-22T15:36:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c25fab17_8f011883",
      "range": {
        "startLine": 60,
        "startChar": 0,
        "endLine": 61,
        "endChar": 45
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fd37ad5_20a54730",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 73,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-15T01:28:00Z",
      "side": 1,
      "message": "Any reason to avoid the Operand directly? A parcelable with one member is just that member?",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 73,
        "endChar": 5
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "15a53836_870c21da",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 73,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-17T08:36:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8fd37ad5_20a54730",
      "range": {
        "startLine": 65,
        "startChar": 4,
        "endLine": 73,
        "endChar": 5
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f2a3fb9_cb2e5408",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 74,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-15T01:28:00Z",
      "side": 1,
      "message": "With the current definition of ...Rules, here are some examples of what this could contain:\n\n- [ CompoundRule::ANY, CompoundRule::ANY, CompoundRule::ANY ]\n- [ CompoundRule::ANY, Delimeter::END, Delimeter::END ]\n\nbut I don\u0027t think we want this? because it wouldn\u0027t make sense or would it?\n\nWhat is an example of the data you\u0027d like to have here?",
      "range": {
        "startLine": 74,
        "startChar": 17,
        "endLine": 74,
        "endChar": 28
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdd4be5c_4418cfaa",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 74,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-17T08:36:20Z",
      "side": 1,
      "message": "CompoundRule::ALL, Delimeter::END make sense: it means always applicable\nCompoundRule::ANY, Delimeter::END, Delimeter::END does not, cardinality of one end per starting compound rule\n\nAlso, the leaf coumpound rule shall at least have one CriterionRule\n\nAn example of compound rule:\n\nCompoundRule::All CompoundRule::Any CompoundRule::All CriterionRule    CriterionRule  Delimiter::END   CriterionRule Delimiter::END   CriterionRule Delimiter::END",
      "parentUuid": "8f2a3fb9_cb2e5408",
      "range": {
        "startLine": 74,
        "startChar": 17,
        "endLine": 74,
        "endChar": 28
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c42696a2_9d43de65",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapRules.aidl",
        "patchSetId": 14
      },
      "lineNbr": 74,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-24T14:10:58Z",
      "side": 1,
      "message": "Ambiguity fixed by recursivity I hope",
      "parentUuid": "bdd4be5c_4418cfaa",
      "range": {
        "startLine": 74,
        "startChar": 17,
        "endLine": 74,
        "endChar": 28
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c1ca93f_1d6a3ef0",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapSetting.aidl",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-06-15T01:28:00Z",
      "side": 1,
      "message": "readers and writers for these?",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 55,
        "endChar": 1
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "016c1d70_963dca58",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapSetting.aidl",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-17T14:59:51Z",
      "side": 1,
      "message": "Reader is audio policy configurable engine, in order to configure the parameter framework instance, which is the consumer. Writer is Audio HAL, new provider of all policy configuration (ex vendor files)",
      "parentUuid": "6c1ca93f_1d6a3ef0",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 55,
        "endChar": 1
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "150c19df_ecf89e7a",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapSetting.aidl",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2024-06-20T23:03:09Z",
      "side": 1,
      "message": "I think, the general concern here is that there is no control via this interface over possible parameters and their values, it just defines a \"meta interface\" which can be used by vendors in an arbitrary manner. We had experience with this kind of interface in HIDL. The big problem is that once some parameters get established, it is expected that the framework and the HAL support them, but there is no indication of that on the interface. As a result, they are unmanageable.\n\nThus, if these settings must be read by the framework code, then we should come up with explicit parameters defined at the AIDL level, that is a field with a fixed type and name in a parcelable. If these settings must be read by vendor components in the framework, for example, forwarded by the framework to vendor-provided apps, or to components of the system that are vendor-specific (system extensions), then it must be something like https://cs.android.com/android/platform/superproject/main/+/main:hardware/interfaces/audio/aidl/android/hardware/audio/core/VendorParameter.aidl which uses `ParcelableHolder` so that the AOSP framework can\u0027t look up these values in principle, and it\u0027s vendor responsibility to ensure backward compatibility and validity.",
      "parentUuid": "016c1d70_963dca58",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 55,
        "endChar": 1
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ecd27d9b_1acb3790",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapSetting.aidl",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-24T14:10:58Z",
      "side": 1,
      "message": "I guess we are not in the pattern of since the final user is AudioPolicy Engine. No dispatch is expected to vendor provided apps. (as for effect for example, or custom setVendorParam / getVendorParam) where the parcelable placeholder is really the good approach to let vendor defining their contract..\n\nIt is as the ports, strategies, volume group retrieved by AIDL, Policy discovers it from getConfig. Behing parameterSettings, we will find the parameter (including strategies, device for strategy, device address for strategy) and the value selected.",
      "parentUuid": "150c19df_ecf89e7a",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 55,
        "endChar": 1
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b54dcbbd_6005076e",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapSetting.aidl",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2024-06-26T21:45:26Z",
      "side": 1,
      "message": "OK, so the user of these parameters is the framework. How do we guarantee that in the case when a newer version of the framework which \"knows\" about more parameters works with an older version of the HAL, the framework does not fail when it receives an abridged set of parameters from it? When all the parameters are defined explicitly in AIDL, this problem is solved by having default values on each parameter.\n\nAlso, with the current approach, what prevents a parameter from changing its type? Again, with explicit specification in AIDL this is not possible—a new parameter must be defined.\n\nSo, the question is—is it possible to lay out all the parameters as explicit declarations in AIDL? If not, then we basically have to come up with versioning approach for this stuff.",
      "parentUuid": "ecd27d9b_1acb3790",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 55,
        "endChar": 1
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "33117cd3_038cf3d9",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapSetting.aidl",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-06-27T15:11:44Z",
      "side": 1,
      "message": "If Frameworks is update with new parameter, but loading older aidl contract, these parameters wont be provided, hence, wont be controlled. \nHowever, access to these param would need to be guarded or return default if not found. If any addition, need to be robust to unfound param and return default value.\n(Or versioning as you proposed to expect or not error if not found)\n\nThe biggest issue I see would be with crirerion/criterionType. If a new one is added, but as HAL is provided the list, this new one would not be recognized.\n\nDefinitely, if it heppens, we will need versionning to prevent Frameworks dealing with \"new\" criteria.",
      "parentUuid": "b54dcbbd_6005076e",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 55,
        "endChar": 1
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d796cc8_1d230120",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapSetting.aidl",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2024-07-20T00:17:34Z",
      "side": 1,
      "message": "smoreland@ Steven, I have noticed that https://cs.android.com/android/platform/superproject/main/+/main:trusty/user/base/interface/device_tree/com/android/trusty/device_tree/Property.aidl is basically the same thing as `ParameterSetting`, even more generic. What is the criteria for allowing such generic parameters in AIDL interfaces?",
      "parentUuid": "33117cd3_038cf3d9",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 55,
        "endChar": 1
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "979a94ff_0ebcf232",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapSetting.aidl",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2024-07-20T00:29:53Z",
      "side": 1,
      "message": "@VintfStability is the big difference here. \n\nThe backward compatibility requirements and the number of people/partners that need to use and implement these VINTF interfaces means that we need well defined interfaces.\n\nIf someone want unstable interfaces that are used between two pieces of code that they own, they can mostly do what they want because it\u0027s easy to change at any time.",
      "parentUuid": "2d796cc8_1d230120",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 55,
        "endChar": 1
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d69bc551_fd19cc3a",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapSetting.aidl",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2024-07-22T16:22:24Z",
      "side": 1,
      "message": "Of course :) Sorry for missing this obvious detail",
      "parentUuid": "979a94ff_0ebcf232",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 55,
        "endChar": 1
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7b0e6c8f_9ef2a6ec",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapSetting.aidl",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1491204
      },
      "writtenOn": "2024-07-26T14:08:22Z",
      "side": 1,
      "message": "Mikhail, what are the remaining action item to allow merging this CL?",
      "parentUuid": "d69bc551_fd19cc3a",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 55,
        "endChar": 1
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a43ac758_0023e5b5",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapSetting.aidl",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2024-07-26T15:16:09Z",
      "side": 1,
      "message": "I know you have seen the document I\u0027ve sent. For everyone else—I have created a doc, internal link go/audio-cap-aidl-external where we will finish discussing remaining questions.",
      "parentUuid": "7b0e6c8f_9ef2a6ec",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 55,
        "endChar": 1
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "943724ef_a17739c4",
        "filename": "media/aidl/android/media/audio/common/AudioHalCapSetting.aidl",
        "patchSetId": 14
      },
      "lineNbr": 55,
      "author": {
        "id": 1042638
      },
      "writtenOn": "2024-08-14T19:48:59Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a43ac758_0023e5b5",
      "range": {
        "startLine": 48,
        "startChar": 8,
        "endLine": 55,
        "endChar": 1
      },
      "revId": "f24cf8f3dd2c82d9be551e6e2f0e930642f7ad8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}