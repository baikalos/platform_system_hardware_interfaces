{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ee7b749b_4c2d9d9f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1131829
      },
      "writtenOn": "2021-02-11T18:33:13Z",
      "side": 1,
      "message": "Hey Janis, can you PTAL. Thanks!",
      "revId": "76ba13eb9edca899fe82c46bb237ceb2d3543371",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b588d4b8_e5ef6f81",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1092085
      },
      "writtenOn": "2021-02-11T19:37:08Z",
      "side": 1,
      "message": "This is actually wrong. 101 was taken by another subsystem. Just remove the VPN namespace for now.",
      "range": {
        "startLine": 60,
        "startChar": 44,
        "endLine": 60,
        "endChar": 47
      },
      "revId": "76ba13eb9edca899fe82c46bb237ceb2d3543371",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b79d9712_d4c37cc6",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1092085
      },
      "writtenOn": "2021-02-11T19:19:45Z",
      "side": 1,
      "message": "Google C++ guidelines disallow the use of non const lvalue references. You can use a pointer here, but I would strongly recommend returning this by value. Since you only return a bool you can express this as std::optional.\n\n std::optional\u003cstd::vector\u003c...\u003e\u003e keyStore2GetCert(...)\n\nat the call site:\n\n if (auto my_result \u003d keyStore2GetCert(...)) {\n     do_something_with(*my_result); // E.g. value \u003d std::move(*my_result);\n } else {\n     // keystore 1 fallback here\n }\n\n\nIf you choose to return a value or an error code you can use std::variant.",
      "range": {
        "startLine": 132,
        "startChar": 46,
        "endLine": 132,
        "endChar": 67
      },
      "revId": "76ba13eb9edca899fe82c46bb237ceb2d3543371",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}