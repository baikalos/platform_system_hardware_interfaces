{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7ae23cb7_29f2d075",
        "filename": "suspend/1.0/default/SystemSuspendUnitTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 211,
      "author": {
        "id": 1499410
      },
      "writtenOn": "2020-11-06T03:58:16Z",
      "side": 1,
      "message": "Cna you wait here for autoSuspendThread to become blocked again?\n\nwhile (!isReadBlocked(wakeupCountFd)) {}\n\nthat should avoid any flakiness due to synchronization",
      "revId": "482deba38b93afe3dbdb037be7f95b7592e8e7e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b03f62ff_45dd8105",
        "filename": "suspend/1.0/default/SystemSuspendUnitTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 211,
      "author": {
        "id": 1409782
      },
      "writtenOn": "2020-11-06T22:50:32Z",
      "side": 1,
      "message": "Still, the function getSleepTime() is error prone due to this problem. I\u0027m not sure that it is a good design decision to have it exposed as a public method.",
      "parentUuid": "7ae23cb7_29f2d075",
      "revId": "482deba38b93afe3dbdb037be7f95b7592e8e7e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6222e586_271b68fe",
        "filename": "suspend/1.0/default/SystemSuspendUnitTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 211,
      "author": {
        "id": 1409782
      },
      "writtenOn": "2020-11-06T23:02:22Z",
      "side": 1,
      "message": "I could expose updateSleepTime() as a public method and have it return the new mSleepTime.\n\nThen the unit tests could test updateSleepTime() in isolation.\n\nThis would also have the added bonus of allowing more sophisticated tests.",
      "parentUuid": "b03f62ff_45dd8105",
      "revId": "482deba38b93afe3dbdb037be7f95b7592e8e7e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "436c0d76_f733e295",
        "filename": "suspend/1.0/default/SystemSuspendUnitTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 211,
      "author": {
        "id": 1409782
      },
      "writtenOn": "2020-11-08T05:25:05Z",
      "side": 1,
      "message": "UPDATE: I think separating this out into a separate class would result in other aspects not getting tested (such as correctly reading suspend time).\n\nI will keep the updateSleepTime() function private and keep the accessor function for the sleep time.",
      "parentUuid": "6222e586_271b68fe",
      "revId": "482deba38b93afe3dbdb037be7f95b7592e8e7e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90dcc2f6_166e9978",
        "filename": "suspend/1.0/default/SystemSuspendUnitTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 377,
      "author": {
        "id": 1409782
      },
      "writtenOn": "2020-11-04T21:51:59Z",
      "side": 1,
      "message": "seeing flaky test failures on cf_x86_phone-userdebug\nsystem/hardware/interfaces/suspend/1.0/default/SystemSuspendUnitTest.cpp:377: Failure\nExpected equality of these values:\ns-\u003egetSleepTime()\nWhich is: 8-byte object \u003c90-01 00-00 00-00 00-00\u003e\nkSleepTimeConfig.baseSleepTime\nWhich is: 8-byte object \u003c64-00 00-00 00-00 00-00\u003e\n\nI have a strong suspicion this is because the unit test is attempting to read mSleepTime without proper locking.\n\nmSleepTime is read and written exclusively in the autosuspend thread, so normally no locking is necessary.\n\nHowever in order for the unit test to exercise this code and verify we are suspending for the correct amount of time, it needs to read mSleepTime as well, which would require a lock of some kind.",
      "range": {
        "startLine": 375,
        "startChar": 4,
        "endLine": 377,
        "endChar": 65
      },
      "revId": "482deba38b93afe3dbdb037be7f95b7592e8e7e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "daefbabc_471dac90",
        "filename": "suspend/1.0/default/SystemSuspendUnitTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 377,
      "author": {
        "id": 1499410
      },
      "writtenOn": "2020-11-05T04:04:25Z",
      "side": 1,
      "message": "Ahh I see. Many of the callback tests are already racy and call checkLoop() some number of times to wait for the callback to happen. In your case you can\u0027t because the test depends on the number of checkLoops. AFAIK this isn\u0027t being used for any CI or cts tests, so it would be ok to add some sleep time to suspendFor() to mitigate this, as we don\u0027t want to introduce any synchronization here.",
      "parentUuid": "90dcc2f6_166e9978",
      "range": {
        "startLine": 375,
        "startChar": 4,
        "endLine": 377,
        "endChar": 65
      },
      "revId": "482deba38b93afe3dbdb037be7f95b7592e8e7e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cdda7246_7a0bd439",
        "filename": "suspend/1.0/default/SystemSuspendUnitTest.cpp",
        "patchSetId": 6
      },
      "lineNbr": 377,
      "author": {
        "id": 1409782
      },
      "writtenOn": "2020-11-08T05:25:05Z",
      "side": 1,
      "message": "Added a waitloop in the unit test code to fix this.",
      "parentUuid": "daefbabc_471dac90",
      "range": {
        "startLine": 375,
        "startChar": 4,
        "endLine": 377,
        "endChar": 65
      },
      "revId": "482deba38b93afe3dbdb037be7f95b7592e8e7e8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}