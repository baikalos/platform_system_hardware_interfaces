{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "056cf8a4_c9481bf2",
        "filename": "suspend/1.0/default/SystemSuspendUnitTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 1241955
      },
      "writtenOn": "2020-11-03T22:52:53Z",
      "side": 1,
      "message": "Additional tests you could potentially add would be verifying that the short suspend backoff enable flag works as intended (e.g. no backoff when disabled) and that the bad suspend threshold works as intended.",
      "revId": "69376e75ca672d9f12b703e2154de9cdb2ede930",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "054718a0_f19c283f",
        "filename": "suspend/1.0/default/SystemSuspendUnitTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 1409782
      },
      "writtenOn": "2020-11-03T23:38:12Z",
      "side": 1,
      "message": "I will think about how to test the backoff enable flag, but that may be difficult because the SystemSuspend class is currently constructed as part of test setup. \n\nThe code on L341 was intended to test the bad suspend threshold.",
      "parentUuid": "056cf8a4_c9481bf2",
      "revId": "69376e75ca672d9f12b703e2154de9cdb2ede930",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95285387_dbbc7bde",
        "filename": "suspend/1.0/default/SystemSuspendUnitTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 325,
      "author": {
        "id": 1499410
      },
      "writtenOn": "2020-11-03T21:11:16Z",
      "side": 1,
      "message": "Can you separate these out into  different test cases?\n\nSuspendBackoffSleepTimeResetsToBaseAfterLongSuspend\nSuspendBacksOffAfterShortSuspendThreshold\n. . .\netc",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 325,
        "endChar": 47
      },
      "revId": "69376e75ca672d9f12b703e2154de9cdb2ede930",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1ad7aac0_8030ea77",
        "filename": "suspend/1.0/default/SystemSuspendUnitTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 333,
      "author": {
        "id": 1499410
      },
      "writtenOn": "2020-11-03T21:11:16Z",
      "side": 1,
      "message": "Do you need this checkloop?",
      "range": {
        "startLine": 333,
        "startChar": 4,
        "endLine": 333,
        "endChar": 17
      },
      "revId": "69376e75ca672d9f12b703e2154de9cdb2ede930",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "371b70f5_bc934dab",
        "filename": "suspend/1.0/default/SystemSuspendUnitTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 338,
      "author": {
        "id": 1499410
      },
      "writtenOn": "2020-11-03T21:11:16Z",
      "side": 1,
      "message": "I suggest adding this logic as a method in the test fixture\nvoid suspendFor(std...milliseconds suspendTime, int numberOfSuspends) {}\n\nYou could then use the values from kSleepTimeConfig in your tests instead of literals. I understand you still need a to have a dummy value for the overhead time.",
      "range": {
        "startLine": 330,
        "startChar": 4,
        "endLine": 338,
        "endChar": 17
      },
      "revId": "69376e75ca672d9f12b703e2154de9cdb2ede930",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99a4ff9b_33becb33",
        "filename": "suspend/1.0/default/SystemSuspendUnitTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 367,
      "author": {
        "id": 1499410
      },
      "writtenOn": "2020-11-03T21:11:16Z",
      "side": 1,
      "message": "This is same as on L351. You can make it a method in the test fixture class. And call it in tearDown().",
      "range": {
        "startLine": 363,
        "startChar": 0,
        "endLine": 367,
        "endChar": 65
      },
      "revId": "69376e75ca672d9f12b703e2154de9cdb2ede930",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}