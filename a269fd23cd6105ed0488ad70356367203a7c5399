{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "23655366_34407bb7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1131829
      },
      "writtenOn": "2021-02-11T22:45:30Z",
      "side": 1,
      "message": "Done, thanks, PTAL.",
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3b31bf4_e9058abe",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1131829
      },
      "writtenOn": "2021-02-11T22:51:13Z",
      "side": 1,
      "message": "Hi Etan, can you PTAL. Thanks!",
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47aec8f2_5197eb68",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1131829
      },
      "writtenOn": "2021-02-12T00:00:27Z",
      "side": 1,
      "message": "Clarification: to work with Keystore2 this code depends also on this change: https://r.android.com/1553283",
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9bada4fd_c3de56e1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1480931
      },
      "writtenOn": "2021-02-12T00:14:50Z",
      "side": 1,
      "message": "A few comments, but I\u0027m also wondering if manual testing is the only thing that can be done here?",
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d2a0f6e_375f4121",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1131829
      },
      "writtenOn": "2021-02-12T20:56:14Z",
      "side": 1,
      "message": "I can add a unite test tests/ to verify logic like handling the prefixes (e.g. \"USRCERT_\") and picking the right field. WDYT?\nI don\u0027t think there is a straightforward way to test whether it works with Keystore properly.",
      "parentUuid": "9bada4fd_c3de56e1",
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "91805fc1_5cb2e5e6",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1480931
      },
      "writtenOn": "2021-02-12T00:14:50Z",
      "side": 1,
      "message": "nit: For",
      "range": {
        "startLine": 62,
        "startChar": 20,
        "endLine": 62,
        "endChar": 23
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9ccd6be0_28da663f",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1131829
      },
      "writtenOn": "2021-02-12T20:56:14Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91805fc1_5cb2e5e6",
      "range": {
        "startLine": 62,
        "startChar": 20,
        "endLine": 62,
        "endChar": 23
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be8b1414_9d93b15e",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1480931
      },
      "writtenOn": "2021-02-12T00:14:50Z",
      "side": 1,
      "message": "nit: This constant doesn\u0027t use the same naming convention as the one above it (camel case).",
      "range": {
        "startLine": 75,
        "startChar": 21,
        "endLine": 75,
        "endChar": 43
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eaa4884e_6d0c19ee",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1092085
      },
      "writtenOn": "2021-02-12T03:20:03Z",
      "side": 1,
      "message": "This is intentional. The new name follows the naming convention for system vendor interfaces (reverse HALs). It lives in system/hardware/interfaces. The old interface was unstable and lived in system/security and it got its package name for the java API which is in android.security.keystore.",
      "parentUuid": "be8b1414_9d93b15e",
      "range": {
        "startLine": 75,
        "startChar": 21,
        "endLine": 75,
        "endChar": 43
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ea8be456_a7c443cb",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1131829
      },
      "writtenOn": "2021-02-12T20:56:14Z",
      "side": 1,
      "message": "Janis, not sure I understood you, but it seems like you are speaking about service name, while Hai is speaking about the constant name. Changed it to match the above.",
      "parentUuid": "eaa4884e_6d0c19ee",
      "range": {
        "startLine": 75,
        "startChar": 21,
        "endLine": 75,
        "endChar": 43
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc73b903_e02ad297",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1480931
      },
      "writtenOn": "2021-02-12T00:14:50Z",
      "side": 1,
      "message": "Is this really a warning? or just finding out that we are using Keystore 1.0? If so, then I think this warning is not needed.",
      "range": {
        "startLine": 134,
        "startChar": 8,
        "endLine": 134,
        "endChar": 67
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17e483c7_6390631e",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1092085
      },
      "writtenOn": "2021-02-12T03:20:03Z",
      "side": 1,
      "message": "Well keystore 1 won\u0027t be around for much longer. Then it will be useful to know why things fell apart. I guess we should really make this an error.",
      "parentUuid": "cc73b903_e02ad297",
      "range": {
        "startLine": 134,
        "startChar": 8,
        "endLine": 134,
        "endChar": 67
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26814207_c2c9a026",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 134,
      "author": {
        "id": 1131829
      },
      "writtenOn": "2021-02-12T20:56:14Z",
      "side": 1,
      "message": "I guess I\u0027ll leave it as warning to avoid creating red herrings during transition to KS2 when it is not enabled and we\u0027ll turn it into an error when removing KS1 invocation once KS2 is the default.",
      "parentUuid": "17e483c7_6390631e",
      "range": {
        "startLine": 134,
        "startChar": 8,
        "endLine": 134,
        "endChar": 67
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ca82d46_ca536b2b",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1480931
      },
      "writtenOn": "2021-02-12T00:14:50Z",
      "side": 1,
      "message": "Does this function convert (or trim out) the alias prefix?\nWhy isn\u0027t it needed anymore?",
      "range": {
        "startLine": 146,
        "startChar": 8,
        "endLine": 146,
        "endChar": 29
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cde39818_341d9882",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1092085
      },
      "writtenOn": "2021-02-12T03:20:03Z",
      "side": 1,
      "message": "Keystore2 considers the key and the optional certificates as one unit grouped under the alias. In keystore 1 each of these artifacts was a separate entry held together by convention. This lead some clients to use keystore as a key value store, which it is clearly not. We have a file system for that. Keystore2 understands the old convention and delivers the artifacts based on their roles. getKeyEntry will return a handle to the private/secret key material and the optional public certificates.\n\nIf you see this warning you should fix the calling code.",
      "parentUuid": "2ca82d46_ca536b2b",
      "range": {
        "startLine": 146,
        "startChar": 8,
        "endLine": 146,
        "endChar": 29
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d09403e0_36134924",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 146,
      "author": {
        "id": 1131829
      },
      "writtenOn": "2021-02-12T20:56:14Z",
      "side": 1,
      "message": "As it turns out, this prefix is still needed to tell whether wpa_supplicant requests CA or user certificate when they are installed under the same alias (e.g. when installed from Settings from a single p12 file).\nSo it is still trimmed to get the actual alias under which it is all stored in Keystore2, but is then used to decide which certificate to return.\nThese prefixes are now not part of Keystore2 unnoficial API but rather a convention between WiFi java code and wificond.",
      "parentUuid": "cde39818_341d9882",
      "range": {
        "startLine": 146,
        "startChar": 8,
        "endLine": 146,
        "endChar": 29
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c10f7de9_8b6d392f",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 196,
      "author": {
        "id": 1480931
      },
      "writtenOn": "2021-02-12T00:14:50Z",
      "side": 1,
      "message": "Why can\u0027t we use value here and below?",
      "range": {
        "startLine": 196,
        "startChar": 9,
        "endLine": 196,
        "endChar": 17
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07db3172_79f8afc2",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 196,
      "author": {
        "id": 1092085
      },
      "writtenOn": "2021-02-12T03:20:03Z",
      "side": 1,
      "message": "ks2_cert is an std::optional so not equivalent to value.\n\nThis and the following line should be\n\n if (auto ks2_cert \u003d keyStore2GetCert(key)) {\n    value \u003d std::move(*ks_cert);\n } else { ...\n\nThis makes sure that ks2_cert is not read without having a value. (Working in Rust for a while makes the things you can do in C++ look really weird.)",
      "parentUuid": "c10f7de9_8b6d392f",
      "range": {
        "startLine": 196,
        "startChar": 9,
        "endLine": 196,
        "endChar": 17
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d189c337_fd7e0153",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 196,
      "author": {
        "id": 1131829
      },
      "writtenOn": "2021-02-12T20:56:14Z",
      "side": 1,
      "message": "Narrowed the scope as suggested.",
      "parentUuid": "07db3172_79f8afc2",
      "range": {
        "startLine": 196,
        "startChar": 9,
        "endLine": 196,
        "endChar": 17
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1844b247_ef80143c",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1480931
      },
      "writtenOn": "2021-02-12T00:14:50Z",
      "side": 1,
      "message": "Can you please add comments why we keep both v2 and v1 paths here? It would be more readable for people who would see this in the future.",
      "range": {
        "startLine": 197,
        "startChar": 4,
        "endLine": 197,
        "endChar": 17
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9602879b_61b95202",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1092085
      },
      "writtenOn": "2021-02-12T03:20:03Z",
      "side": 1,
      "message": "The fallback can be removed when Keystore2 becomes the default. This should happen fairly soon. This patch is among the last blockers of completing this migration.",
      "parentUuid": "1844b247_ef80143c",
      "range": {
        "startLine": 197,
        "startChar": 4,
        "endLine": 197,
        "endChar": 17
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bc5f85f2_e579a7a9",
        "filename": "wifi/keystore/1.0/default/keystore.cpp",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1131829
      },
      "writtenOn": "2021-02-12T20:56:14Z",
      "side": 1,
      "message": "Added a todo that explains that both versions are supported only temporarily.",
      "parentUuid": "9602879b_61b95202",
      "range": {
        "startLine": 197,
        "startChar": 4,
        "endLine": 197,
        "endChar": 17
      },
      "revId": "a269fd23cd6105ed0488ad70356367203a7c5399",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}