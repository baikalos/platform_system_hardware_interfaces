{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "603f76ef_6081cb04",
        "filename": "keystore2/aidl/android/system/keystore2/IKeystoreService.aidl",
        "patchSetId": 1
      },
      "lineNbr": 193,
      "author": {
        "id": 1836235
      },
      "writtenOn": "2023-02-09T11:01:14Z",
      "side": 1,
      "message": "does this need the \"accessible by the caller\" text that\u0027s on the other entrypoints?",
      "revId": "b096e4d37e01cc4697f40f7c988005900b3f6df1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "161a6afd_e0797021",
        "filename": "keystore2/aidl/android/system/keystore2/IKeystoreService.aidl",
        "patchSetId": 1
      },
      "lineNbr": 193,
      "author": {
        "id": 1078064
      },
      "writtenOn": "2023-03-01T12:46:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "603f76ef_6081cb04",
      "revId": "b096e4d37e01cc4697f40f7c988005900b3f6df1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "632276d0_7d4f1a04",
        "filename": "keystore2/aidl/android/system/keystore2/IKeystoreService.aidl",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1836235
      },
      "writtenOn": "2023-02-09T11:01:14Z",
      "side": 1,
      "message": "s/list all the entries/determine the number of entries/",
      "revId": "b096e4d37e01cc4697f40f7c988005900b3f6df1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "88a6f017_b8c27228",
        "filename": "keystore2/aidl/android/system/keystore2/IKeystoreService.aidl",
        "patchSetId": 1
      },
      "lineNbr": 196,
      "author": {
        "id": 1078064
      },
      "writtenOn": "2023-03-01T12:46:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "632276d0_7d4f1a04",
      "revId": "b096e4d37e01cc4697f40f7c988005900b3f6df1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b57d7f1d_f0209e7d",
        "filename": "keystore2/aidl/android/system/keystore2/IKeystoreService.aidl",
        "patchSetId": 1
      },
      "lineNbr": 203,
      "author": {
        "id": 1836235
      },
      "writtenOn": "2023-02-09T11:01:14Z",
      "side": 1,
      "message": "nit: line length",
      "revId": "b096e4d37e01cc4697f40f7c988005900b3f6df1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f40f0d47_e5cc25ea",
        "filename": "keystore2/aidl/android/system/keystore2/IKeystoreService.aidl",
        "patchSetId": 1
      },
      "lineNbr": 203,
      "author": {
        "id": 1078064
      },
      "writtenOn": "2023-03-01T12:46:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b57d7f1d_f0209e7d",
      "revId": "b096e4d37e01cc4697f40f7c988005900b3f6df1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ad50411_cb66e778",
        "filename": "keystore2/aidl/android/system/keystore2/IKeystoreService.aidl",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1836235
      },
      "writtenOn": "2023-02-09T11:01:14Z",
      "side": 1,
      "message": "\"no stability\" might be a bit too strong -- presumably the ordering of entries is expected to be the same (modulo additions/deletions) between calls?\n\nMore generally, it feels like there should be a more reliable way of getting all the entries in batches.  For example, if there was a defined ordering for the entries, you could have \"list up to N entries that order \u003e X\", where X is either null or the final entry from the previous call.  (Also, this must be a common problem with async list APIs, so maybe there\u0027s a best practice design pattern out there?)",
      "revId": "b096e4d37e01cc4697f40f7c988005900b3f6df1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cafbbac0_77fee7b7",
        "filename": "keystore2/aidl/android/system/keystore2/IKeystoreService.aidl",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1833664
      },
      "writtenOn": "2023-02-09T16:02:32Z",
      "side": 1,
      "message": "What about listing keys filtered by alias, with a cap? We could match aliases by doing a `alias.contains(filter)` operation, returning all keys that match.\n\nThis might solve the same problem, while avoiding problems with trying to \"chunk\" a giant list into smaller API calls. It also means we could solve everything with just one new method call and one new database query.",
      "parentUuid": "5ad50411_cb66e778",
      "revId": "b096e4d37e01cc4697f40f7c988005900b3f6df1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9f53180a_a883dc8e",
        "filename": "keystore2/aidl/android/system/keystore2/IKeystoreService.aidl",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1078064
      },
      "writtenOn": "2023-03-01T12:46:30Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cafbbac0_77fee7b7",
      "revId": "b096e4d37e01cc4697f40f7c988005900b3f6df1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}